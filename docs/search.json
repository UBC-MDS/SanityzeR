[{"path":"https://ubc-mds.github.io/sanityzeR/articles/sanityzeR.html","id":"the-goal-of-sanityzer","dir":"Articles","previous_headings":"","what":"The goal of sanityzeR","title":"Getting Started with sanityzeR","text":"Data scientists often need remove redact Personal Identifiable Information (PII) data. package provides utilities spot redact PII r data frames/Tibbles. PII can used uniquely identify person. includes names, addresses, credit card numbers, phone numbers, email addresses, social security numbers, therefore regulatory bodies European Union’s General Data Protection Regulation (GDPR) California Consumer Privacy Act (CCPA) require PII removed redacted data sets shared processed.","code":""},{"path":"https://ubc-mds.github.io/sanityzeR/articles/sanityzeR.html","id":"functionalities","dir":"Articles","previous_headings":"","what":"Functionalities","title":"Getting Started with sanityzeR","text":"document introduces fundamental tools sanityzeR shows apply data frames. three functions package including data cleaning, credit card number handling, email address handling.","code":""},{"path":"https://ubc-mds.github.io/sanityzeR/articles/sanityzeR.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Getting Started with sanityzeR","text":"can install development version sanityzeR GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"UBC-MDS/sanityzeR\")"},{"path":"https://ubc-mds.github.io/sanityzeR/articles/sanityzeR.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Getting Started with sanityzeR","text":"","code":"library(sanityzeR)"},{"path":"https://ubc-mds.github.io/sanityzeR/articles/sanityzeR.html","id":"create-a-dummy-dataframe","dir":"Articles","previous_headings":"Setup","what":"Create a dummy dataframe","title":"Getting Started with sanityzeR","text":"","code":"df <- data.frame(  Name = c(\"My email address is 123456abcd@yahoo.com and zzzzz123@yahoo.mail Thank you.\",                           \"Bill for: 4556129404313766\",                           \"Maria\",                           \"Ben\",                           \"Tina\"),                  Age = c(23, 41, 32, 16, 26) ) df ##                                                                          Name ## 1 My email address is 123456abcd@yahoo.com and zzzzz123@yahoo.mail Thank you. ## 2                                                  Bill for: 4556129404313766 ## 3                                                                       Maria ## 4                                                                         Ben ## 5                                                                        Tina ##   Age ## 1  23 ## 2  41 ## 3  32 ## 4  16 ## 5  26"},{"path":"https://ubc-mds.github.io/sanityzeR/articles/sanityzeR.html","id":"create-spotters-with-redacted-function","dir":"Articles","previous_headings":"Setup","what":"Create Spotters with redacted function","title":"Getting Started with sanityzeR","text":"following spotters replace detected PII fixed string.","code":"spotter_1_r <- list(redact_email,FALSE,\"EMAILADDRS\") spotter_2_r <- list(redact_creditcardnumber,FALSE,\"CREDITCARD\") spotters_redacted <- list(spotter_2_r,spotter_1_r)"},{"path":"https://ubc-mds.github.io/sanityzeR/articles/sanityzeR.html","id":"create-spotters-with-hash-function","dir":"Articles","previous_headings":"Setup","what":"Create Spotters with hash function","title":"Getting Started with sanityzeR","text":"following spotters replace detected PII hash.","code":"spotter_1_h <- list(redact_email,TRUE,0) spotter_2_h <- list(redact_creditcardnumber,TRUE,0) spotters_hashed <- list(spotter_2_h,spotter_1_h)"},{"path":"https://ubc-mds.github.io/sanityzeR/articles/sanityzeR.html","id":"clean-pii-with-redacted","dir":"Articles","previous_headings":"","what":"Clean PII with redacted","title":"Getting Started with sanityzeR","text":"Replacing PII fixed string.","code":"clean_data_frame(df, spotters_redacted) ##                                                       Name Age ## 1 My email address is EMAILADDRS and EMAILADDRS Thank you.  23 ## 2                                     Bill for: CREDITCARD  41 ## 3                                                    Maria  32 ## 4                                                      Ben  16 ## 5                                                     Tina  26"},{"path":"https://ubc-mds.github.io/sanityzeR/articles/sanityzeR.html","id":"clean-pii-with-hash","dir":"Articles","previous_headings":"","what":"Clean PII with hash","title":"Getting Started with sanityzeR","text":"Replacing PII hash.","code":"clean_data_frame(df, spotters_hashed) ##                                                                                                   Name ## 1 My email address is 00345d02eb20733e49077c9618f0d598 and ba68a57288bf24140628f37aadbb7920 Thank you. ## 2                                                           Bill for: e93723ee0d38e30a68902aef6b0033de ## 3                                                                                                Maria ## 4                                                                                                  Ben ## 5                                                                                                 Tina ##   Age ## 1  23 ## 2  41 ## 3  32 ## 4  16 ## 5  26"},{"path":"https://ubc-mds.github.io/sanityzeR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jonah Hamilton. Author, maintainer. Caesar Wong. Author, maintainer. Tony Zoght. Author, maintainer.","code":""},{"path":"https://ubc-mds.github.io/sanityzeR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hamilton J, Wong C, Zoght T (2023). sanityzeR: Package (One Line, Title Case). R package version 0.0.0.9000, https://ubc-mds.github.io/sanityzeR/.","code":"@Manual{,   title = {sanityzeR: What the Package Does (One Line, Title Case)},   author = {Jonah Hamilton and Caesar Wong and Tony Zoght},   year = {2023},   note = {R package version 0.0.0.9000},   url = {https://ubc-mds.github.io/sanityzeR/}, }"},{"path":[]},{"path":"https://ubc-mds.github.io/sanityzeR/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://ubc-mds.github.io/sanityzeR/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://ubc-mds.github.io/sanityzeR/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://ubc-mds.github.io/sanityzeR/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://ubc-mds.github.io/sanityzeR/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement jonah.hamilton@alumni.ubc.ca. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://ubc-mds.github.io/sanityzeR/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://ubc-mds.github.io/sanityzeR/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://ubc-mds.github.io/sanityzeR/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://ubc-mds.github.io/sanityzeR/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://ubc-mds.github.io/sanityzeR/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://ubc-mds.github.io/sanityzeR/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://ubc-mds.github.io/sanityzeR/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to sanityzeR","title":"Contributing to sanityzeR","text":"outlines propose change sanityzeR. detailed info contributing , tidyverse packages, please see development contributing guide. Contributions welcome, greatly appreciated! Every little bit helps, credit always given.","code":""},{"path":[]},{"path":"https://ubc-mds.github.io/sanityzeR/CONTRIBUTING.html","id":"report-bugs","dir":"","previous_headings":"Types of Contributions","what":"Report Bugs","title":"Contributing to sanityzeR","text":"reporting bug, please include: operating system name version. details local setup might helpful troubleshooting. Detailed steps reproduce bug.","code":""},{"path":"https://ubc-mds.github.io/sanityzeR/CONTRIBUTING.html","id":"fix-bugs","dir":"","previous_headings":"Types of Contributions","what":"Fix Bugs","title":"Contributing to sanityzeR","text":"Look GitHub issues bugs Project. Anything tagged “bug” “help wanted” open whoever wants implement .","code":""},{"path":"https://ubc-mds.github.io/sanityzeR/CONTRIBUTING.html","id":"implement-features","dir":"","previous_headings":"Types of Contributions","what":"Implement Features","title":"Contributing to sanityzeR","text":"Look GitHub issues features. Anything tagged “enhancement” “help wanted” open whoever wants implement .","code":""},{"path":"https://ubc-mds.github.io/sanityzeR/CONTRIBUTING.html","id":"write-documentation","dir":"","previous_headings":"Types of Contributions","what":"Write Documentation","title":"Contributing to sanityzeR","text":"can never enough documentation! Please feel free contribute part documentation, official docs, docstrings, even web blog posts, articles, .","code":""},{"path":"https://ubc-mds.github.io/sanityzeR/CONTRIBUTING.html","id":"submit-feedback","dir":"","previous_headings":"Types of Contributions","what":"Submit Feedback","title":"Contributing to sanityzeR","text":"proposing feature: Explain detail work. Keep scope narrow possible, make easier implement. Remember volunteer-driven project, contributions welcome","code":""},{"path":"https://ubc-mds.github.io/sanityzeR/CONTRIBUTING.html","id":"get-started","dir":"","previous_headings":"","what":"Get Started!","title":"Contributing to sanityzeR","text":"Ready contribute? ’s set sanityzeR local development. use devtools library manager manage dependencies, github workflows run tests. Download copy sanityzeR locally. Call load_all() make sanityzer available experimentation. Use git (similar) create branch local development make changes: ’re done making changes, check changes conform code formatting requirements pass tests. Commit changes open pull request.","code":"$ git checkout -b name-of-your-bugfix-or-feature"},{"path":"https://ubc-mds.github.io/sanityzeR/CONTRIBUTING.html","id":"pull-request-guidelines","dir":"","previous_headings":"","what":"Pull Request Guidelines","title":"Contributing to sanityzeR","text":"submit pull request, check meets guidelines: pull request include additional tests appropriate. pull request adds functionality, docs updated. pull request work currently supported operating systems versions Python.","code":""},{"path":"https://ubc-mds.github.io/sanityzeR/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Pull Request Guidelines","what":"Code style","title":"Contributing to sanityzeR","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://ubc-mds.github.io/sanityzeR/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to sanityzeR","text":"Please note sanityzeR project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":[]},{"path":"https://ubc-mds.github.io/sanityzeR/CONTRIBUTORS.html","id":"special-thanks-for-all-the-people-who-had-helped-this-project-so-far","dir":"","previous_headings":"","what":"Special thanks for all the people who had helped this project so far:","title":"Contributors","text":"Tony Zoght Caesar Wong Jonah Hamilton","code":""},{"path":"https://ubc-mds.github.io/sanityzeR/CONTRIBUTORS.html","id":"i-would-like-to-join-this-list-how-can-i-help-the-project","dir":"","previous_headings":"","what":"I would like to join this list. How can I help the project?","title":"Contributors","text":"information, please refer CONTRIBUTING guide.","code":""},{"path":[]},{"path":"https://ubc-mds.github.io/sanityzeR/index.html","id":"the-goal-of-sanityzer","dir":"","previous_headings":"","what":"The Goal of sanityzeR","title":"What the Package Does (One Line, Title Case)","text":"Data scientists often need remove redact Personal Identifiable Information (PII) data. package provides utilities spot redact PII r data frames/Tibbles. PII can used uniquely identify person. includes names, addresses, credit card numbers, phone numbers, email addresses, social security numbers, therefore regulatory bodies European Union’s General Data Protection Regulation (GDPR) California Consumer Privacy Act (CCPA) require PII removed redacted data sets shared processed.","code":""},{"path":"https://ubc-mds.github.io/sanityzeR/index.html","id":"why-sanityzer-","dir":"","previous_headings":"","what":"Why sanityzeR ?","title":"What the Package Does (One Line, Title Case)","text":"’s fun name ’s play word “sanitize” data.","code":""},{"path":"https://ubc-mds.github.io/sanityzeR/index.html","id":"similar-r-packages","dir":"","previous_headings":"","what":"Similar R packages","title":"What the Package Does (One Line, Title Case)","text":"closest R package functionality anonymizer package finding removing PII text. package designed work data frames directly believe package user-friendly intuitive accepts data frames directly. addition, sanityzeR gives ability users define new type spotters redact new types PII.","code":""},{"path":"https://ubc-mds.github.io/sanityzeR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"What the Package Does (One Line, Title Case)","text":"can install development version sanityzeR GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"UBC-MDS/sanityzeR\")"},{"path":"https://ubc-mds.github.io/sanityzeR/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"What the Package Does (One Line, Title Case)","text":"basic example shows solve common problem:","code":"library(sanityzeR) df <- data.frame() spotters <- list() spotter_1 <- list(redact_email,TRUE,0) spotters <- append(spotters,spotter_1)  df_cleaned <- clean_data_frame(df, spotters)"},{"path":"https://ubc-mds.github.io/sanityzeR/index.html","id":"features-and-usage","dir":"","previous_headings":"","what":"Features and Usage","title":"What the Package Does (One Line, Title Case)","text":"Conceptually, sanityzeR package provides way remove PII Pandas data frames. package provides number default spotters, can used identify PII data redact . library comes two default redaction functions redact_creditcardnumber redact_email simply takes character vector redacts corresponding PII using either constant string replacement hash redaction.","code":""},{"path":"https://ubc-mds.github.io/sanityzeR/index.html","id":"functions","dir":"","previous_headings":"","what":"Functions","title":"What the Package Does (One Line, Title Case)","text":"constant string user can specify hash redaction (using MD5) constant string user can specify hash redaction (using MD5) input data.frame df clean list spotter information arguments. item list list 3 elements: redact_* function use (e.g. redact_creditcardnumber ). second argument redact_* function: hash_spotted (TRUE FALSE) 0 use default argument. third argument redact_* function: replace_with (redaction string) 0 use default argument. simple quick start example:","code":"library(sanityzeR) df <- data.frame() spotters <- list() spotter_1 <- list(redact_email,TRUE,0) spotters <- append(spotters,spotter_1)  df_cleaned <- clean_data_frame(df, spotters)"},{"path":"https://ubc-mds.github.io/sanityzeR/index.html","id":"high-level-design","dir":"","previous_headings":"","what":"High-level Design","title":"What the Package Does (One Line, Title Case)","text":"better understand design package, provided high-level design document, kept date package evolves. document can found .","code":""},{"path":"https://ubc-mds.github.io/sanityzeR/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"What the Package Does (One Line, Title Case)","text":"Interested contributing? Check contributing guidelines. Please note project released Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://ubc-mds.github.io/sanityzeR/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"What the Package Does (One Line, Title Case)","text":"sanityzeR created Caesar Wong, Jonah Hamilton Tony Zoght. licensed terms MIT license.","code":""},{"path":"https://ubc-mds.github.io/sanityzeR/index.html","id":"credits","dir":"","previous_headings":"","what":"Credits","title":"What the Package Does (One Line, Title Case)","text":"sanityzeR created using devtools usethis R packages.","code":""},{"path":"https://ubc-mds.github.io/sanityzeR/index.html","id":"quick-links","dir":"","previous_headings":"","what":"Quick Links","title":"What the Package Does (One Line, Title Case)","text":"Kanban Board Issues High Level Design Contributing Guidelines Code Conduct License Code Coverage","code":""},{"path":"https://ubc-mds.github.io/sanityzeR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 sanityzeR authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://ubc-mds.github.io/sanityzeR/reference/clean_data_frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Cleans a data.frame by redacting PII information from character vector columns — clean_data_frame","title":"Cleans a data.frame by redacting PII information from character vector columns — clean_data_frame","text":"Cleans data.frame redacting PII information character vector columns","code":""},{"path":"https://ubc-mds.github.io/sanityzeR/reference/clean_data_frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cleans a data.frame by redacting PII information from character vector columns — clean_data_frame","text":"","code":"clean_data_frame(df, spotters_list)"},{"path":"https://ubc-mds.github.io/sanityzeR/reference/clean_data_frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cleans a data.frame by redacting PII information from character vector columns — clean_data_frame","text":"df data.frame clean spotters_list list containing lists 3 elements : redact function hash_spotted value pass 0 keep default replace_with value 0 keep default","code":""},{"path":"https://ubc-mds.github.io/sanityzeR/reference/clean_data_frame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cleans a data.frame by redacting PII information from character vector columns — clean_data_frame","text":"deep copy cleaned data.frame.","code":""},{"path":"https://ubc-mds.github.io/sanityzeR/reference/clean_data_frame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cleans a data.frame by redacting PII information from character vector columns — clean_data_frame","text":"","code":"df <- data.frame() spotters <- list() spotter_1 <- list(redact_email,TRUE,0) spotters <- list(spotter_1) df_cleaned <- clean_data_frame(df, spotters)"},{"path":"https://ubc-mds.github.io/sanityzeR/reference/redact_creditcardnumber.html","id":null,"dir":"Reference","previous_headings":"","what":"Redacts credit card numbers from a given string — redact_creditcardnumber","title":"Redacts credit card numbers from a given string — redact_creditcardnumber","text":"Redacts credit card numbers given string","code":""},{"path":"https://ubc-mds.github.io/sanityzeR/reference/redact_creditcardnumber.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Redacts credit card numbers from a given string — redact_creditcardnumber","text":"","code":"redact_creditcardnumber(   string,   hash_spotted = FALSE,   replace_with = \"CREDITCARD\" )"},{"path":"https://ubc-mds.github.io/sanityzeR/reference/redact_creditcardnumber.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Redacts credit card numbers from a given string — redact_creditcardnumber","text":"string character vector , , one element. input string redact credit card numbers hash_spotted TRUE, redaction credit cards hash redacted (Default False) replace_with character vector , , one element. hash_spotted FALSE, character vector replacement redacted credit card numbers.","code":""},{"path":"https://ubc-mds.github.io/sanityzeR/reference/redact_creditcardnumber.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Redacts credit card numbers from a given string — redact_creditcardnumber","text":"character vector.","code":""},{"path":"https://ubc-mds.github.io/sanityzeR/reference/redact_creditcardnumber.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Redacts credit card numbers from a given string — redact_creditcardnumber","text":"","code":"x <- \"You can use my 5567554868135971 here\" redact_creditcardnumber(x) #> [1] \"You can use my CREDITCARD here\""},{"path":"https://ubc-mds.github.io/sanityzeR/reference/redact_email.html","id":null,"dir":"Reference","previous_headings":"","what":"Redacts an email addresses from a given string — redact_email","title":"Redacts an email addresses from a given string — redact_email","text":"Redacts email addresses given string","code":""},{"path":"https://ubc-mds.github.io/sanityzeR/reference/redact_email.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Redacts an email addresses from a given string — redact_email","text":"","code":"redact_email(string, hash_spotted = FALSE, replace_with = \"EMAILADDRS\")"},{"path":"https://ubc-mds.github.io/sanityzeR/reference/redact_email.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Redacts an email addresses from a given string — redact_email","text":"string character vector , , one element. input string redact email addresses hash_spotted TRUE, redaction email addresses hash redacted (Default False) replace_with character vector , , one element. hash_spotted FALSE, character vector replacement redacted email addresses.","code":""},{"path":"https://ubc-mds.github.io/sanityzeR/reference/redact_email.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Redacts an email addresses from a given string — redact_email","text":"character vector.","code":""},{"path":"https://ubc-mds.github.io/sanityzeR/reference/redact_email.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Redacts an email addresses from a given string — redact_email","text":"","code":"x <- \"my email address is foo@gaga.com\" redact_email(x) #> [1] \"my email address is EMAILADDRS\""},{"path":"https://ubc-mds.github.io/sanityzeR/reference/redact_it.html","id":null,"dir":"Reference","previous_headings":"","what":"Cleans a data.frame by redacting PII information from character vector columns — redact_it","title":"Cleans a data.frame by redacting PII information from character vector columns — redact_it","text":"Cleans data.frame redacting PII information character vector columns","code":""},{"path":"https://ubc-mds.github.io/sanityzeR/reference/redact_it.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cleans a data.frame by redacting PII information from character vector columns — redact_it","text":"","code":"redact_it(string, spotters_list)"},{"path":"https://ubc-mds.github.io/sanityzeR/reference/redact_it.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cleans a data.frame by redacting PII information from character vector columns — redact_it","text":"string string redact spotters_list list containing lists 3 elements : redact function hash_spotted value pass 0 keep default replace_with value 0 keep default","code":""},{"path":"https://ubc-mds.github.io/sanityzeR/reference/redact_it.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cleans a data.frame by redacting PII information from character vector columns — redact_it","text":"redacted string","code":""}]
